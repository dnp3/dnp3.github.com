<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>DNP3.Interface Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="DNP3.Interface namespace" /><meta name="Microsoft.Help.F1" content="DNP3.Interface" /><meta name="Microsoft.Help.Id" content="N:DNP3.Interface" /><meta name="Description" content="Public API of the opendnp3 CLR bindings. The DNP3.Adapter namespace contains 1 exposed factory class for obtaining a concrete implementation of IDNP3Manager. @@_SHFB_1" /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="DNP3.Interface" /><meta name="file" content="34077d95-269e-4b93-666a-e7c7ba03ed18" /><meta name="guid" content="34077d95-269e-4b93-666a-e7c7ba03ed18" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">A Sandcastle Documented Class Library</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">DNP3.Interface Namespace</span></td></tr><tr id="headerTableRow3"><td align="left"><span id="headfeedbackarea" class="feedbackhead"><a href="#" onclick="javascript:SubmitFeedback('','A Sandcastle Documented Class Library','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback'); return false;">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" id="headerBottom"><img id="headerBottomImage" style="display: none;" src="../icons/gradient.gif" /></td></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary"><p>
                Public API of the opendnp3 CLR bindings.
                
                The DNP3.Adapter namespace contains 1 exposed factory class for obtaining a concrete implementation of IDNP3Manager.
                
                <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve"><span class="highlight-keyword">using</span> DNP3.Adapter;
<span class="highlight-keyword">using</span> DNP3.Interface;

<span class="highlight-keyword">class</span> Program
{
   <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args)
   {
       <span class="highlight-comment">//obtain an IDNP3Manager by using the factory class from the DNP3.Adapter namespace</span>
       IDNP3Manager mgr = DNP3ManagerFactory.CreateManager();

       <span class="highlight-comment">// proceed to add channels and stacks .... checkout the wiki for details</span>
   }
}</pre></td></tr></table></span></div></p></div><h1 class="heading"><span onclick="ExpandCollapse(classToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(classToggle, event)" tabindex="0"><img id="classToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Classes</span></h1><div id="classSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
					 
				</th><th class="nameColumn">Class</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="024bceb6-559c-d12f-2860-d13e60668432.htm">Analog</a></td><td><div class="summary">
            A discrete or continuous analog value
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="45f2d7c7-e658-e625-9be7-3118b060f2d8.htm">AnalogOutput<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary">
            Base class for all AnalogOutputs
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="da94e590-091a-d895-bd3f-ae6a868af0c5.htm">AnalogOutputDouble64</a></td><td><div class="summary">
            A set-point command request with double precision floating point representation.
            The underlying DNP3 serialization is Group41, Variation 4
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b11dcc0a-d354-82bc-85e3-d623d5ce83bf.htm">AnalogOutputFloat32</a></td><td><div class="summary">
            A set-point command request with single precision floating point representation.
            The underlying DNP3 serialization is Group41, Variation 3
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7830c0ef-4256-d2b6-501c-f05f03d305fc.htm">AnalogOutputInt16</a></td><td><div class="summary">
            A set-point command request with short integer representation.
            The underlying DNP3 serialization is Group41, Variation 2
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="28cefd31-d042-b5f3-3264-3329bcb4d3b1.htm">AnalogOutputInt32</a></td><td><div class="summary">
            A set-point command request with short integer representation.
            The underlying DNP3 serialization is Group41, Variation 1
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="606ca519-dcbc-e45a-796d-b81d011ed035.htm">AppConfig</a></td><td><div class="summary">
            Configuration object for the application layer
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="fed3c4d6-4449-5f37-7274-e53895124d77.htm">Binary</a></td><td><div class="summary">
            A boolean measurement type (i.e. whether a switch is open/closed)
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="da04893b-e9c3-02f2-d645-072337824557.htm">ControlRelayOutputBlock</a></td><td><div class="summary">
            Command request to control a relay output.
            
            Has lots of possible modes. Consult the dnp3 standard for all valid combinations.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="6aa5bf5d-5b4f-c962-99d1-5ffe07658b2c.htm">ControlStatus</a></td><td><div class="summary">
            Represents the state of a digital output
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5002e443-089e-4f7e-d2d2-a1fd3ca37b72.htm">Counter</a></td><td><div class="summary">
            An increasing count of some event
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="9b8b0cab-d0ad-76b5-5ee4-91a26037f3f6.htm">DeadbandEventPointRecord</a></td><td><div class="summary">
            Point record type that is assigned an event class and deadband tolerance
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="85069baf-7a10-9475-72f1-1adcd7e38d15.htm">DeviceTemplate</a></td><td><div class="summary">
            Defines the database layout for an outstation
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="326f0673-fb84-4562-fde6-bdc10f36306f.htm">EventMaxConfig</a></td><td><div class="summary">
            Class that defines how many events an outstation database will record before buffer overflow occurs
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5308f244-5732-b147-4406-bf0ec76702b8.htm">EventPointRecord</a></td><td><div class="summary">
            Point record type that is assigned an event class 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="0e72e96a-8d77-f902-4d8a-8f1e0a89b0ac.htm">ExceptionScan</a></td><td><div class="summary">
            Defines a periodic class based scan (Class 0,1,2,3)
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="1e90f7a6-c724-b417-e6e7-b3e73eaaa223.htm">Future<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary">
            Implementation of IFuture with the ability to set the value once
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="14eef2c8-ac35-d1d4-de89-87fe9ffbdac1.htm">LinkConfig</a></td><td><div class="summary">
            Configuration class for the link layer
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="4a83f2ee-0ebc-4e23-9624-0da1e7479352.htm">LogEntry</a></td><td><div class="summary">
            A message from the logging framework
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="015106e8-76fd-d32a-f91e-e980ca4825cd.htm">MasterConfig</a></td><td><div class="summary">
            Configuration information for the dnp3 master
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b8868da3-d4e3-194e-29da-8367c1307636.htm">MasterStackConfig</a></td><td><div class="summary">
            Aggreate configuration for a master stack
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="0e66245a-e9f7-42da-6589-b60cfe9cde4a.htm">PointRecord</a></td><td><div class="summary">
            Base class from which all PointRecords are inherited
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b763b04d-2928-a7e0-e0af-2d89612b8d20.htm">PrintingDataObserver</a></td><td><div class="summary">
            Singleton that prints all received values to the console.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="215a3624-b53f-61b2-7fe2-66d2ccfccdd0.htm">PrintingLogAdapter</a></td><td><div class="summary">
            Singleton log adapter that prints messages to the console
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="9276f936-df17-3b21-5cc2-ad395be3400a.htm">RejectingCommandHandler</a></td><td><div class="summary">
            Singeton that rejects all commands
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="81110c48-be41-906b-3e05-353564442e69.htm">SerialSettings</a></td><td><div class="summary">
            Settings class for  serial port
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="af922a34-8d76-b3dd-5cce-955280a54c0b.htm">SetpointStatus</a></td><td><div class="summary">
            Represents the status of analog output on an outstation.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="e0f3f7c3-55ea-adbb-bcae-98f54ed8a8c1.htm">SimpleCommandHandler</a></td><td><div class="summary">
            Handles all commands by calling a function
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="2acab4fa-3bd5-7192-fb3b-9b2560450f9d.htm">SlaveConfig</a></td><td><div class="summary">
            Configuration information for a dnp3 slave (outstation)
            Used as both input describing the startup configuration of the slave, and as configuration state of mutable properties (i.e. unsolicited responses).
            Major feature areas are unsolicited responses, time synchronization requests, event buffer limits, and the DNP3 object/variations to use by default
            when the master requests class data or variation 0.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7642081b-5be0-3ad4-c6cf-2251734633ef.htm">SlaveStackConfig</a></td><td><div class="summary">
            Aggreate configuration for an outstation stack
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="570c629e-d75b-60ef-d5c3-954f6590ce81.htm">TimeStamp</a></td><td><div class="summary">
            Collection of static methods for translating dnp3 to .NET timestamps and back
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(structureToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(structureToggle, event)" tabindex="0"><img id="structureToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Structures</span></h1><div id="structureSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
					 
				</th><th class="nameColumn">Structure</th><th class="descriptionColumn">Description</th></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="1d267396-75ab-e06c-2f75-bfe06367dc0f.htm">ClassMask</a></td><td><div class="summary">
            Structure that records which events are scanned / evented
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="d8055fda-ff30-82b0-8fc1-cbae723433ea.htm">GrpVar</a></td><td><div class="summary">
            Group/Variation pair used to define default responses of outstation
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(interfaceToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(interfaceToggle, event)" tabindex="0"><img id="interfaceToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Interfaces</span></h1><div id="interfaceSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
					 
				</th><th class="nameColumn">Interface</th><th class="descriptionColumn">Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="46291baa-600f-beb2-62af-1370b2a9ab73.htm">IChannel</a></td><td><div class="summary">
            A communication channel to which DNP3 masters / outstation can be attached
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="a38391b8-2def-a4d2-cd60-cc66858c2e7c.htm">ICommandHandler</a></td><td><div class="summary">
            Outstation application code implements this interface to handle command requests from a master
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="dc19e9e8-6a8b-fd5c-b185-e384afb1b59e.htm">ICommandProcessor</a></td><td><div class="summary">
            Interface for dispatching command requests from a master to an outstation
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="23a9aff9-f2ca-449e-a44a-134d5908ccc0.htm">IDataObserver</a></td><td><div class="summary">
            Interface called to load data into an outstation or receive data from a master
            start() / end() must be called before / after any calls to update.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="cdb16e80-2cb5-6543-9fb4-f9087e2a555e.htm">IDNP3Manager</a></td><td><div class="summary">
            Root interface used for all dnp3 applications
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="fb57e86b-63e6-238d-f7c3-3063bf2e46fa.htm">IFuture<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary">
            Represents the future value of an operation
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="bf7abed8-eebe-8645-80fc-398926613998.htm">ILogHandler</a></td><td><div class="summary">
            Callback interface to handle log messages
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="27364160-c587-6f48-99a3-ba6139fd674f.htm">IMaster</a></td><td><div class="summary">
            Interface representing a master station
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="f1881cba-4b62-6c6a-375b-9995eb6a0ec8.htm">IOutstation</a></td><td><div class="summary">
            Interface representing an outstation
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="dad4fd5c-4b12-05a5-4e25-598c7b91a824.htm">IStack</a></td><td><div class="summary">
            Base interface for masters and outstations
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(enumerationToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(enumerationToggle, event)" tabindex="0"><img id="enumerationToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Enumerations</span></h1><div id="enumerationSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
					 
				</th><th class="nameColumn">Enumeration</th><th class="descriptionColumn">Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="20756a9a-3fda-5217-4311-0a720b78673a.htm">AnalogQuality</a></td><td><div class="summary">
            Bitmasks that make make up the quality field for analogs. See BinaryQuality for common (unlabeled) bitmasks.
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="5276a30f-0bed-edd7-3180-ded55e6ea979.htm">BinaryQuality</a></td><td><div class="summary">
            Quality enumeration for Binary measurements
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="16925514-0a69-f6e8-83a3-1e5a8a3c7aa6.htm">CommandStatus</a></td><td><div class="summary">
            An enumeration of result codes received from an outstation in response to command request.
            These correspond directly to those defined in the dnp3 standard
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="1f8c4680-036e-ce79-7d37-74a53dda9b96.htm">ControlCode</a></td><td><div class="summary">
            Possible action types from a ControlRelayOutputBlock
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="bf5d9b6c-09e0-4d9c-a9d4-d21a4c118dda.htm">ControlQuality</a></td><td><div class="summary">
            Quality enumeration for Control Status measurements
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="31bfa224-6402-6915-07ca-3222e74c5536.htm">CounterQuality</a></td><td><div class="summary">
            Quality enumeration for Counters
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="1ceb604b-9117-3c11-a96a-06683b6bd7e1.htm">FlowControl</a></td><td><div class="summary">
            Serial port flow control enumeration
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="aaad1d36-84b6-533e-f655-63ada4de3283.htm">LogLevel</a></td><td><div class="summary">
            Log level enumeration
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="ae785bfc-7bc5-5b7e-90fe-9ad0b15ceafc.htm">Parity</a></td><td><div class="summary">
            Serial port parity enumeration
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="82ae0da5-616d-cb68-36a0-f767a70f8e2c.htm">PointClass</a></td><td><div class="summary">
            Enumeration for controlling class based scanning / eventing
            CLASS 0 corresponds to Group 60 Variation 1
            CLASS 1 corresponds to Group 60 Variation 2
            CLASS 2 corresponds to Group 60 Variation 3
            CLASS 3 corresponds to Group 60 Variation 4
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="2592f586-c097-54ff-b460-075bcbea1978.htm">SetpointQuality</a></td><td><div class="summary">
            Quality enumeration for AnalogOutputStatus measurements
            </div></td></tr></table></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span></div></div></body></html>